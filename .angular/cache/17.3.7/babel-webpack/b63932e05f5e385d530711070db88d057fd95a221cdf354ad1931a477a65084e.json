{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\n// Custom TranslateLoader WITHOUT HttpClient\nexport class CustomTranslateLoader {\n  getTranslation(lang) {\n    // You can hardcode translations here or load them from local JSON files by import\n    const translations = {\n      en: {\n        TITLE: \"Hello\",\n        DESCRIPTION: \"This is an English description\"\n      },\n      ge: {\n        TITLE: \"გამარჯობა\",\n        DESCRIPTION: \"ეს არის ქართული აღწერა\"\n      }\n      // add more languages here\n    };\n    return of(translations[lang] || translations['en']);\n  }\n}\n// Factory function that returns the custom loader (no HttpClient needed)\nexport function CustomLoaderFactory() {\n  return new CustomTranslateLoader();\n}\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {\n    static #_ = this.ɵfac = function AppModule_Factory(t) {\n      return new (t || AppModule)();\n    };\n    static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n    static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [BrowserModule, AppRoutingModule, FormsModule, TranslateModule.forRoot({\n        loader: {\n          provide: TranslateLoader,\n          useFactory: CustomLoaderFactory,\n          deps: [] // no dependencies\n        }\n      })]\n    });\n  }\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}